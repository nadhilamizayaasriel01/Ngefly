/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.Data;
import javax.swing.JOptionPane;
import java.sql.*;
import Model.TBooking;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nadila Mazaya Asriel
 */
public class TicketBooking extends javax.swing.JFrame {

    private final DefaultTableModel model = new DefaultTableModel();
    private Data koneksiData = new Data();

    /**
     * Creates new form TicketList
     */

    // Method public ticketBooking overloading
    public TicketBooking(String airlines, String depart, String arrive, String ticketCode) {
        initComponents();
        // mengambil ukuran layar
        Dimension layar = Toolkit.getDefaultToolkit().getScreenSize();

        // membuat titik x dan y
        int x = layar.width / 2 - this.getSize().width / 2;
        int y = layar.height / 2 - this.getSize().height / 2;
        this.setLocation(x, y);

        // Matiin Resize / Maximize
        setResizable(false);

        inputAirlines.setText(airlines);
        inputDepart.setText(depart);
        inputArrive.setText(arrive);
        inputTicket.setText(ticketCode);

        model.addColumn("ID");
        model.addColumn("Depart");
        model.addColumn("Arrive");
        model.addColumn("Airlines");
        model.addColumn("Amount");
        model.addColumn("TicketCode");
        model.addColumn("Name");

        tblBook.setModel(model);
        populateTable();
    }

    public TicketBooking() {
        initComponents();
        // mengambil ukuran layar
        Dimension layar = Toolkit.getDefaultToolkit().getScreenSize();

        // membuat titik x dan y
        int x = layar.width / 2 - this.getSize().width / 2;
        int y = layar.height / 2 - this.getSize().height / 2;
        this.setLocation(x, y);

        // Matiin Resize / Maximize
        setResizable(false);
        inputId.setEditable(true);

        model.addColumn("ID");
        model.addColumn("Depart");
        model.addColumn("Arrive");
        model.addColumn("Airlines");
        model.addColumn("Amount");
        model.addColumn("TicketCode");
        model.addColumn("Name");

        tblBook.setModel(model);
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private void populateTable() {
        model.setRowCount(0);
        // Enkapsulasi
        try {
            ArrayList<TBooking> lihat = koneksiData.tampilData();
            for (TBooking tb : lihat) {
                Object[] isiData = {tb.getId(), tb.getDepart(), tb.getArrive(), tb.getAirlines(), tb.getAmount(), tb.getTicketCode(), tb.getName()};
                model.addRow(isiData);
            }
        } catch (SQLException ex) {
            System.out.println("Eksepsi: " + ex.getMessage());
            JOptionPane.showMessageDialog(null, "Exception: " + ex.getMessage());

        }
    }

    public TicketBooking(String id, String depart, String arrive, String airlines, String amount, String ticketCode, String name) {
        inputId.setText(id);
        inputDepart.setText(depart);
        inputArrive.setText(arrive);
        inputAirlines.setText(airlines);
        inputAmount.setText(amount);
        inputTicket.setText(ticketCode);
        inputName.setText(name);

        model.addColumn("ID");
        model.addColumn("Depart");
        model.addColumn("Arrive");
        model.addColumn("Airlines");
        model.addColumn("Amount");
        model.addColumn("TicketCode");
        model.addColumn("Name");

        tblBook.setModel(model);
        populateTable();
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ID = new javax.swing.JPanel();
        ticketBooking = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        depart = new javax.swing.JLabel();
        arrive = new javax.swing.JLabel();
        airlines = new javax.swing.JLabel();
        amount = new javax.swing.JLabel();
        ticketCode = new javax.swing.JLabel();
        inputName = new javax.swing.JTextField();
        inputId = new javax.swing.JTextField();
        inputDepart = new javax.swing.JTextField();
        inputArrive = new javax.swing.JTextField();
        inputAirlines = new javax.swing.JTextField();
        inputAmount = new javax.swing.JTextField();
        inputTicket = new javax.swing.JTextField();
        btnNext = new javax.swing.JButton();
        btnBook = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBook = new javax.swing.JTable();
        btnClear = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        listTicket = new javax.swing.JLabel();
        amount1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 241, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ID.setBackground(new java.awt.Color(184, 218, 252));
        ID.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ticketBooking.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        ticketBooking.setText("Ticket Booking");
        ID.add(ticketBooking, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 20, 190, 50));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/Teks paragraf Anda (1).png"))); // NOI18N
        ID.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, -170, 508, 730));

        name.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        name.setText("Name :");
        ID.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 330, 90, 40));

        id.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        id.setText("Id :");
        ID.add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 80, 70, 40));

        depart.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        depart.setText("Depart");
        ID.add(depart, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 120, 90, 40));

        arrive.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        arrive.setText("Arrive :");
        ID.add(arrive, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 170, 80, 40));

        airlines.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        airlines.setText("Airlines :");
        ID.add(airlines, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 210, 80, 40));

        amount.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        amount.setText("Ticket");
        ID.add(amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 250, 90, -1));

        ticketCode.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        ticketCode.setText("Ticket Code :");
        ID.add(ticketCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 290, 110, 40));

        inputName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNameActionPerformed(evt);
            }
        });
        ID.add(inputName, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 330, 200, 30));

        inputId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputIdActionPerformed(evt);
            }
        });
        ID.add(inputId, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 90, 200, 30));

        inputDepart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputDepartActionPerformed(evt);
            }
        });
        ID.add(inputDepart, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 130, 200, 30));

        inputArrive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputArriveActionPerformed(evt);
            }
        });
        ID.add(inputArrive, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 170, 200, 30));

        inputAirlines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputAirlinesActionPerformed(evt);
            }
        });
        ID.add(inputAirlines, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 210, 200, 30));

        inputAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputAmountActionPerformed(evt);
            }
        });
        ID.add(inputAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 250, 50, 30));

        inputTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTicketActionPerformed(evt);
            }
        });
        ID.add(inputTicket, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 290, 200, 30));

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        ID.add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 600, -1, -1));

        btnBook.setText("Book");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });
        ID.add(btnBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 390, -1, -1));

        tblBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Depart", "Arrive", "Airlines", "Amount", "Ticket Code", "Name"
            }
        ));
        tblBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBookMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBook);

        ID.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 920, 140));

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        ID.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 390, -1, -1));

        btnHapus.setText("Delete");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        ID.add(btnHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 600, -1, -1));

        listTicket.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        listTicket.setText("List Ticket Booking");
        ID.add(listTicket, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, 240, 70));

        amount1.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        amount1.setText("Amount :");
        ID.add(amount1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 250, 90, 40));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        ID.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 600, -1, -1));

        getContentPane().add(ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 980, 670));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNameActionPerformed

    private void inputIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputIdActionPerformed

    private void inputDepartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputDepartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputDepartActionPerformed

    private void inputArriveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputArriveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputArriveActionPerformed

    private void inputAirlinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputAirlinesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputAirlinesActionPerformed

    private void inputAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputAmountActionPerformed

    private void inputTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTicketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTicketActionPerformed

    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
        int selectedRow = tblBook.getSelectedRow();
        String id = inputId.getText();
        String depart = inputDepart.getText();
        String arrive = inputArrive.getText();
        String airlines = inputAirlines.getText();
        String amount = inputAmount.getText();
        String ticketCode = inputTicket.getText();
        String name = inputName.getText();

        TBooking tb = new TBooking(id, depart, arrive, airlines, amount, ticketCode, name);

        if (id.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Add Id !");
        } else if (depart.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Add Depart !");
        } else if (arrive.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Add Arrive !");
        } else if (airlines.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Add Airlines!");
        } else if (amount.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Add Amount Ticket !");
        } else if (ticketCode.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Add Ticket Code !");
        } else if (name.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Add Airlines!");
        } else if (btnBook.getText().equals("Book")) {
            try {
                if (koneksiData.tambahData(tb)) {
                    JOptionPane.showMessageDialog(this, "Add Data Success !");
                    populateTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Failed Data Success");
                }
            } catch (SQLException ex) {
                System.out.println("Eksepsi: " + ex.getMessage());
                JOptionPane.showMessageDialog(null, "Exception: " + ex.getMessage());
            }
        } else if (btnBook.getText().equals("Edit")) {
            try {
                int jawaban = JOptionPane.showConfirmDialog(this, "Edit Data " + tb.getId() + "?", "Edit", JOptionPane.YES_NO_OPTION);
                if (jawaban == JOptionPane.YES_OPTION) {
                    if (koneksiData.ubahData(tb)) {
                        JOptionPane.showMessageDialog(this, "Edit Data Success !");
                        populateTable();
                    } else {
                        JOptionPane.showMessageDialog(this, "Failed Edit Data");
                    }
                }
            } catch (SQLException ex) {
                System.out.println("Eksepsi: " + ex.getMessage());
                JOptionPane.showMessageDialog(null, "Exception: " + ex.getMessage());
            }
//        tblBook.setModel(model);
//        populateTable();
        }
//       tblBook.setModel(model);
        populateTable();

    }//GEN-LAST:event_btnBookActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        inputId.setText("");
        inputDepart.setText("");
        inputArrive.setText("");
        inputAirlines.setText("");
        inputAmount.setText("");
        inputTicket.setText("");
        inputName.setText("");

        inputId.setEnabled(true);
        btnBook.setText("Book");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int selectedRow = tblBook.getSelectedRow();
        String id = model.getValueAt(selectedRow, 0).toString();
        int jawaban = JOptionPane.showConfirmDialog(this, "Delete Data " + id + "?", "Delete", JOptionPane.YES_NO_OPTION);
        if (jawaban == JOptionPane.YES_OPTION) {
            //hapus
            try {
                if (koneksiData.hapusData(id)) {
                    JOptionPane.showMessageDialog(this, "Delete Data Success !");
                    populateTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Delete Data Failed !");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Eksepsi: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        Menu menu = new Menu();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        Biodata bio = new Biodata();
        bio.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnNextActionPerformed

    private void tblBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBookMouseClicked
        int selectedRow = tblBook.getSelectedRow();

        String id = model.getValueAt(selectedRow, 0).toString();
        String depart = model.getValueAt(selectedRow, 1).toString();
        String arrive = model.getValueAt(selectedRow, 2).toString();
        String airlines = model.getValueAt(selectedRow, 3).toString();
        String amount = model.getValueAt(selectedRow, 4).toString();
        String ticketCode = model.getValueAt(selectedRow, 5).toString();
        String name = model.getValueAt(selectedRow, 6).toString();

        inputId.setText(id);
        inputId.setEditable(false);

        inputDepart.setText(id);
        inputArrive.setText(arrive);
        inputAirlines.setText(airlines);
        inputAmount.setText(amount);
        inputTicket.setText(ticketCode);
        inputName.setText(name);

        btnBook.setText("Edit");
    }//GEN-LAST:event_tblBookMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicketBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicketBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicketBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicketBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicketBooking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ID;
    private javax.swing.JLabel airlines;
    private javax.swing.JLabel amount;
    private javax.swing.JLabel amount1;
    private javax.swing.JLabel arrive;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBook;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnNext;
    private javax.swing.JLabel depart;
    private javax.swing.JLabel id;
    private javax.swing.JTextField inputAirlines;
    private javax.swing.JTextField inputAmount;
    private javax.swing.JTextField inputArrive;
    private javax.swing.JTextField inputDepart;
    private javax.swing.JTextField inputId;
    private javax.swing.JTextField inputName;
    private javax.swing.JTextField inputTicket;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel listTicket;
    private javax.swing.JLabel name;
    private javax.swing.JTable tblBook;
    private javax.swing.JLabel ticketBooking;
    private javax.swing.JLabel ticketCode;
    // End of variables declaration//GEN-END:variables

}
